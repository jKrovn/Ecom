{"version":3,"sources":["images/movie_tickets.jpg","components/Home.js","components/form-components/Input.js","components/ui-components/Alert.js","components/LoginFunc.js","components/GraphQL.js","components/OneMovieGraphQL.js","components/MoviesFunc.js","components/GenresFunc.js","components/OneMovieFunc.js","components/OneGenreFunc.js","components/form-components/TextArea.js","components/form-components/Select.js","components/EditMovieFunc.js","components/AdminFunc.js","App.js","index.js"],"names":["Home","className","src","Ticket","alt","Component","Input","props","htmlFor","name","title","type","id","value","onChange","handleChange","placeholder","errorDiv","errorMsg","Alert","alertType","role","alertMessage","LoginFunc","useState","email","setEmail","password","setPassword","errors","setErrors","message","alert","setAlert","hasError","key","indexOf","onSubmit","evt","preventDefault","push","length","data","FormData","target","payload","Object","fromEntries","entries","requestOptions","method","body","JSON","stringify","fetch","process","REACT_APP_API_URL","then","response","json","jwt","error","values","handleJWTChange","window","localStorage","setItem","history","pathname","GraphQL","setState","prevState","searchTerm","performSearch","movies","state","isLoaded","bind","this","myHeaders","Headers","append","headers","search","theList","console","log","list","map","m","to","year","runtime","description","slice","OneMovieGraphQL","movie","match","params","genres","poster","mpaa_rating","index","MoviesFunc","setMovies","setError","useEffect","status","GenresFunc","setGenres","genreName","genre_name","OneMovieFunc","setMovie","OneGenreFunc","setGenreName","location","TextArea","rows","Select","options","option","label","EditMovieFunc","releaseDate","Date","release_date","toISOString","split","rating","href","onClick","confirmAlert","buttons","AdminFunc","App","hyandleJWTChange","logout","removeItem","t","getItem","parse","loginLink","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8211f91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/movie_tickets.8bbaed34.jpg\";","import React, { Component } from 'react'\nimport Ticket from './../images/movie_tickets.jpg'\nimport './Home.css'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className='text-center'>\n        <h2>This is the home page</h2>\n        <hr />\n        <img src={Ticket} alt='movie ticket' />\n      </div>\n    )\n  }\n}\n","const Input = (props) => {\r\n    return (\r\n        <div className='mb-3'>\r\n            <label htmlFor={props.name} className='form-label' >\r\n                {props.title}\r\n            </label>\r\n            <input type={props.type} className={`form-control ${props.className}`} id={props.name} name={props.name} value={props.value} onChange={props.handleChange} placeholder={props.placeholder} />\r\n            <div className={props.errorDiv}>{props.errorMsg}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","const Alert = (props) => {\r\n    return (\r\n        <div className={`alert ${props.alertType}`} role=\"alert\">\r\n            {props.alertMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React, { useState, Fragment } from 'react'\r\nimport Input from './form-components/Input'\r\nimport Alert from './ui-components/Alert'\r\n\r\nfunction LoginFunc(props) {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errors, setErrors] = useState([])\r\n  const [alert, setAlert] = useState({ type: 'd-none', message: '' })\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    if (email === '') {\r\n      errors.push('email')\r\n    }\r\n    if (password === '') {\r\n      errors.push('password')\r\n    }\r\n    setErrors(errors)\r\n    if (errors.length > 0) {\r\n      return false\r\n    }\r\n    const data = new FormData(evt.target)\r\n    const payload = Object.fromEntries(data.entries())\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: JSON.stringify(payload),\r\n    }\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/signin`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setAlert({ type: 'alert-danger', message: 'Invalid login' })\r\n        } else {\r\n          handleJWTChange(Object.values(data)[0])\r\n          window.localStorage.setItem(\r\n            'jwt',\r\n            JSON.stringify(Object.values(data)[0])\r\n          )\r\n          props.history.push({\r\n            pathname: '/admin',\r\n          })\r\n        }\r\n      })\r\n  }\r\n  function handleJWTChange(jwt) {\r\n    props.handleJWTChange(jwt)\r\n  }\r\n  function hasError(key) {\r\n    return errors.indexOf(key) !== -1\r\n  }\r\n  function handleEmail(evt) {\r\n    setEmail(evt.target.value)\r\n  }\r\n  function handlePassword(evt) {\r\n    setPassword(evt.target.value)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h2>Login</h2>\r\n      <hr />\r\n      <Alert alertType={alert.type} alertMessage={alert.message} />\r\n\r\n      <form className='pt-3' onSubmit={handleSubmit}>\r\n        <Input\r\n          title={'Email'}\r\n          type={'email'}\r\n          name={'email'}\r\n          handleChange={handleEmail}\r\n          className={hasError('email') ? 'is-invalid' : ''}\r\n          errorDiv={hasError('email') ? 'text-danger' : 'd-none'}\r\n          errorMsg={'Please enter a valid email address'}\r\n        />\r\n\r\n        <Input\r\n          title={'Password'}\r\n          type={'password'}\r\n          name={'password'}\r\n          handleChange={handlePassword}\r\n          className={hasError('password') ? 'is-invalid' : ''}\r\n          errorDiv={hasError('password') ? 'text-danger' : 'd-none'}\r\n          errorMsg={'Please enter a password'}\r\n        />\r\n\r\n        <hr />\r\n        <button className='btn btn-primary'>Login</button>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LoginFunc\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Input from './form-components/Input'\r\n\r\nexport default class GraphQL extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      movies: [],\r\n      isLoaded: false,\r\n      error: null,\r\n      alert: {\r\n        type: 'd-none',\r\n        message: '',\r\n      },\r\n      searchTerm: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange = (evt) => {\r\n    let value = evt.target.value\r\n    this.setState((prevState) => ({\r\n      searchTerm: value,\r\n    }))\r\n    if (value.length > 2) {\r\n      this.performSearch()\r\n    } else {\r\n      this.setState({\r\n        movies: [],\r\n      })\r\n    }\r\n  }\r\n\r\n  performSearch() {\r\n    const payload = `\r\n    {\r\n        search(titleContains: \"${this.state.searchTerm}\") {\r\n            id\r\n            title\r\n            runtime\r\n            year\r\n            description\r\n        }\r\n    }\r\n    `\r\n    const myHeaders = new Headers()\r\n    myHeaders.append('Content-Type', 'application/json')\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: payload,\r\n      headers: myHeaders,\r\n    }\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let theList = Object.values(data.data.search)\r\n        return theList\r\n      })\r\n      .then((theList) => {\r\n        console.log(theList)\r\n        if (theList.length > 0) {\r\n          this.setState({\r\n            movies: theList,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            movies: [],\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const payload = `\r\n    {\r\n        list {\r\n            id\r\n            title\r\n            runtime\r\n            year\r\n            description\r\n        }\r\n    }\r\n    `\r\n    const myHeaders = new Headers()\r\n    myHeaders.append('Content-Type', 'application/json')\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: payload,\r\n      headers: myHeaders,\r\n    }\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let theList = Object.values(data.data.list)\r\n        return theList\r\n      })\r\n      .then((theList) => {\r\n        this.setState({\r\n          movies: theList,\r\n        })\r\n        console.log(theList)\r\n      })\r\n  }\r\n  render() {\r\n    let { movies } = this.state\r\n    return (\r\n      <Fragment>\r\n        <h2>GraphQL</h2>\r\n        <hr />\r\n        <Input\r\n          title={'Search'}\r\n          type={'text'}\r\n          name={'search'}\r\n          value={this.state.searchTerm}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <div className='list-group'>\r\n          {movies.map((m) => (\r\n            <Link\r\n              key={m.id}\r\n              className='list-group-item list-group-item-action'\r\n              to={`/moviesgraphql/${m.id}`}\r\n            >\r\n              <strong>{m.title}</strong>\r\n              <br />\r\n              <small className='text-muted'>\r\n                ({m.year}) - {m.runtime} minutes\r\n              </small>\r\n              <br />\r\n              {m.description.slice(0, 100)}...\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nexport default class OneMovieGraphQL extends Component {\r\n  state = { movie: {}, isLoaded: false, error: null }\r\n\r\n  componentDidMount() {\r\n    const payload = `\r\n    {\r\n        movie (id:${this.props.match.params.id}){\r\n            id\r\n            title\r\n            runtime\r\n            year\r\n            description\r\n            release_date\r\n            rating\r\n            mpaa_rating\r\n            poster\r\n        }\r\n    }\r\n    `\r\n\r\n    const myHeaders = new Headers()\r\n    myHeaders.append('Content-Type', 'application/json')\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: payload,\r\n      headers: myHeaders,\r\n    }\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          movie: data.data.movie,\r\n          isLoaded: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { movie, isLoaded, error } = this.state\r\n    if (movie.genres) {\r\n      movie.genres = Object.values(movie.genres)\r\n    } else {\r\n      movie.genres = []\r\n    }\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <p>Loading ...</p>\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <h2>\r\n            Movie: {movie.title} ({movie.year})\r\n          </h2>\r\n          {movie.poster !== '' && (\r\n            <div>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${movie.poster}`}\r\n                alt='poster'\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className='float-start'>\r\n            <small>Rating: {movie.mpaa_rating}</small>\r\n          </div>\r\n          <div className='float-end'>\r\n            {movie.genres.map((m, index) => (\r\n              <span className='badge bg-secondary me-1' key={index}>\r\n                {m}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <div className='clearfix'></div>\r\n          <hr />\r\n          <table className='table table-compact table-striped'>\r\n            <thead></thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <strong>Title:</strong>\r\n                </td>\r\n                <td>{movie.title}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <strong>Description:</strong>\r\n                </td>\r\n                <td>{movie.description}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <strong>Run time:</strong>\r\n                </td>\r\n                <td>{movie.runtime} minutes</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction MoviesFunc(props) {\r\n  const [movies, setMovies] = useState([])\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\r\n      .then((response) => {\r\n        console.log('Status code is', response.status)\r\n        if (response.status !== 200) {\r\n          //   let err = Error\r\n          //   err.message = 'Invalid response code ' + response.status\r\n          //   this.setState({ error: err })\r\n          setError('Invalid response code: ', response.status)\r\n        } else {\r\n          setError(null)\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((json) => {\r\n        // this.setState(\r\n        //   {\r\n        //     movies: json.movies,\r\n        //     isLoaded: true,\r\n        //   },\r\n        //   (error) => {\r\n        //     this.setState({\r\n        //       isLoaded: true,\r\n        //       error,\r\n        //     })\r\n        //   }\r\n        // )\r\n        setMovies(json.movies)\r\n      })\r\n  }, []) // *** must set default value\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>Choose a movie</h2>\r\n        <div className='list-group'>\r\n          {movies.map((m) => (\r\n            <Link\r\n              key={m.id}\r\n              className='list-group-item list-group-item-action'\r\n              to={`/movies/${m.id}`}\r\n            >\r\n              {m.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoviesFunc\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction GenresFunc(props) {\r\n  const [genres, setGenres] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/genres`)\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          setError('Invalid response ', response.status)\r\n        } else {\r\n          setError(null)\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((json) => {\r\n        setGenres(json.genres)\r\n      })\r\n  }, [])\r\n  if (error != null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>Genres</h2>\r\n        <div className='list-group'>\r\n          {genres.map((m) => (\r\n            <Link\r\n              key={m.id}\r\n              className='list-group-item list-group-item-action'\r\n              to={{\r\n                pathname: `/genre/${m.id}`,\r\n                genreName: m.genre_name,\r\n              }}\r\n            >\r\n              {m.genre_name}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GenresFunc\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\n\r\nfunction OneMovieFunc(props) {\r\n  const [movie, setMovie] = useState({})\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + props.match.params.id)\r\n      .then((response) => {\r\n        console.log('Status code is', response.status)\r\n        if (response.status !== 200) {\r\n          setError('Invalid response: ', response.status)\r\n        } else {\r\n          setError(null)\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((json) => {\r\n        setMovie(json.movie)\r\n      })\r\n  }, [props.match.params.id])\r\n\r\n  if (movie.genres) {\r\n    movie.genres = Object.values(movie.genres)\r\n  } else {\r\n    movie.genres = []\r\n  }\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>\r\n          Movie: {movie.title} ({movie.year})\r\n        </h2>\r\n        <div className='float-start'>\r\n          <small>Rating: {movie.mpaa_rating}</small>\r\n        </div>\r\n        <div className='float-end'>\r\n          {movie.genres.map((m, index) => (\r\n            <span className='badge bg-secondary me-1' key={index}>\r\n              {m}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className='clearfix'></div>\r\n        <hr />\r\n        <table className='table table-compact table-striped'>\r\n          <thead></thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <strong>Title:</strong>\r\n              </td>\r\n              <td>{movie.title}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <strong>Description:</strong>\r\n              </td>\r\n              <td>{movie.description}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <strong>Run time:</strong>\r\n              </td>\r\n              <td>{movie.runtime} minutes</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OneMovieFunc\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction OneGenreFunc(props) {\r\n  let [movies, setMovies] = useState([])\r\n  const [error, setError] = useState(null)\r\n  let [genreName, setGenreName] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies/` + props.match.params.id)\r\n      .then((response) => {\r\n        console.log('Status code is', response.status)\r\n        if (response.status !== 200) {\r\n          setError('Invalid response: ', response.status)\r\n        } else {\r\n          setError(null)\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((json) => {\r\n        setGenreName(props.location.genreName)\r\n        setMovies(json.movies)\r\n      })\r\n  }, [props.match.params.id, props.location.genreName])\r\n\r\n  if (!movies) {\r\n    movies = []\r\n  }\r\n\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>Genre: {genreName}</h2>\r\n        <div className='list-group'>\r\n          {movies.map((m) => (\r\n            <Link\r\n              key={m.id}\r\n              className='list-group-item list-group-item-action'\r\n              to={`/movies/${m.id}`}\r\n            >\r\n              {m.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OneGenreFunc\r\n","const TextArea = (props) => {\r\n    return (\r\n        <div className='mb-3'>\r\n            <label htmlFor=\"description\" className='form-label'>\r\n                {props.title}\r\n            </label>\r\n            <textarea className='form-control' id={props.name} name={props.name} value={props.value} rows={props.rows} onChange={props.handleChange}></textarea>\r\n        </div>\r\n    )\r\n}\r\nexport default TextArea;","const Select = (props) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <label htmlFor={props.name} className=\"form-label\">\r\n                {\" \"}\r\n                {props.title}{\" \"}\r\n            </label>\r\n            <select className=\"form-select\" name={props.name} value={props.value} onChange={props.handleChange}>\r\n                <option value=\"\">{props.placeholder}</option>\r\n                {props.options.map(option=>{\r\n                    return (\r\n                        <option className=\"form-select\" key={option.id} value={option.id} label={option.value}>{option.value}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './EditMovie.css'\r\nimport Input from './form-components/Input'\r\nimport TextArea from './form-components/TextArea'\r\nimport Select from './form-components/Select'\r\nimport Alert from './ui-components/Alert'\r\nimport { confirmAlert } from 'react-confirm-alert'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'\r\n\r\nfunction EditMovieFunc(props) {\r\n  const [movie, setMovie] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [errors, setErrors] = useState([])\r\n  const [alert, setAlert] = useState({ type: 'd-none', message: '' })\r\n  const mpaaOptions = [\r\n    { id: 'G', value: 'G' },\r\n    { id: 'PG', value: 'PG' },\r\n    { id: 'PG13', value: 'PG13' },\r\n    { id: 'R', value: 'R' },\r\n    { id: 'NC17', value: 'NC17' },\r\n  ]\r\n  useEffect(() => {\r\n    if (props.jwt === '') {\r\n      props.history.push({\r\n        pathname: '/login',\r\n      })\r\n      return\r\n    }\r\n    const id = props.match.params.id\r\n    if (id > 0) {\r\n      fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + id)\r\n        .then((response) => {\r\n          if (response.status !== 200) {\r\n            setError('Invalid response: ', response.status)\r\n          } else {\r\n            setError(null)\r\n          }\r\n          return response.json()\r\n        })\r\n        .then((json) => {\r\n          const releaseDate = new Date(json.movie.release_date)\r\n          json.movie.release_date = releaseDate.toISOString().split('T')[0]\r\n          setMovie(json.movie)\r\n        })\r\n    }\r\n  }, [props.history, props.jwt, props.match.params.id])\r\n\r\n  const handleChange = () => (evt) => {\r\n    let value = evt.target.value\r\n    let name = evt.target.name\r\n    setMovie({\r\n      ...movie,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let errors = []\r\n    if (movie.title === '') {\r\n      errors.push('title')\r\n    }\r\n    setErrors(errors)\r\n    if (errors.length > 0) {\r\n      return false\r\n    }\r\n\r\n    const data = new FormData(evt.target)\r\n    const payload = Object.fromEntries(data.entries())\r\n    const myHeaders = new Headers()\r\n    myHeaders.append('Content-Type', 'application/json')\r\n    myHeaders.append('Authorization', 'Bearer ' + props.jwt)\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: JSON.stringify(payload),\r\n      headers: myHeaders,\r\n    }\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/admin/editmovie`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setAlert({\r\n            alert: { type: 'alert-danger', message: data.error.message },\r\n          })\r\n        } else {\r\n          props.history.push({\r\n            pathname: '/admin',\r\n          })\r\n        }\r\n      })\r\n  }\r\n  const confirmDelete = (e) => {\r\n    confirmAlert({\r\n      title: 'Delete Movie?',\r\n      message: 'Are you sure?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            const myHeaders = new Headers()\r\n            myHeaders.append('Content-Type', 'application/json')\r\n            myHeaders.append('Authorization', 'Bearer ' + props.jwt)\r\n            fetch(\r\n              `${process.env.REACT_APP_API_URL}/admin/deletemovie/` + movie.id,\r\n              {\r\n                method: 'GET',\r\n                headers: myHeaders,\r\n              }\r\n            )\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                if (data.error) {\r\n                  setAlert({\r\n                    type: 'alert-danger',\r\n                    message: data.error.message,\r\n                  })\r\n                } else {\r\n                  props.history.push({\r\n                    pathname: '/admin',\r\n                  })\r\n                }\r\n              })\r\n          },\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    })\r\n  }\r\n  function hasError(key) {\r\n    return errors.indexOf(key) !== -1\r\n  }\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>Add/Edit Movie</h2>\r\n        <Alert alertType={alert.type} alertMessage={alert.message} />\r\n        <hr />\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type='hidden'\r\n            name='id'\r\n            id='id'\r\n            value={movie.id}\r\n            onChange={handleChange('id')}\r\n          />\r\n          <Input\r\n            title={'Title'}\r\n            className={hasError('title') ? 'is-invalid' : ''}\r\n            type={'text'}\r\n            name={'title'}\r\n            value={movie.title}\r\n            handleChange={handleChange('title')}\r\n            errorDiv={hasError('title') ? 'text-danger' : 'd-none'}\r\n            errorMsg={'Please enter a title'}\r\n          />\r\n          <Input\r\n            title={'Release Date'}\r\n            type={'date'}\r\n            name={'release_date'}\r\n            value={movie.release_date}\r\n            handleChange={handleChange('release_date')}\r\n          />\r\n          <Input\r\n            title={'Runtime'}\r\n            type={'text'}\r\n            name={'runtime'}\r\n            value={movie.runtime}\r\n            handleChange={handleChange('runtime')}\r\n          />\r\n          <Select\r\n            title={'MPAA Rating'}\r\n            name={'mpaa_rating'}\r\n            options={mpaaOptions}\r\n            value={movie.mpaa_rating}\r\n            handleChange={handleChange('mpaa_rating')}\r\n            placeholder={'Choose'}\r\n          />\r\n          <Input\r\n            title={'Rating'}\r\n            type={'text'}\r\n            name={'rating'}\r\n            value={movie.rating}\r\n            handleChange={handleChange('rating')}\r\n          />\r\n          <TextArea\r\n            title={'Description'}\r\n            name={'description'}\r\n            value={movie.description}\r\n            rows={'3'}\r\n            handleChange={handleChange('description')}\r\n          />\r\n          <hr />\r\n          <button className='btn btn-primary'>Save</button>\r\n          <Link to='/admin' className='btn btn-warning ms-1'>\r\n            Cancel\r\n          </Link>\r\n          {movie.id > 0 && (\r\n            <a\r\n              href='#'\r\n              onClick={() => confirmDelete()}\r\n              className='btn btn-danger ms-1'\r\n            >\r\n              Delete\r\n            </a>\r\n          )}\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditMovieFunc\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AdminFunc(props) {\r\n  const [movies, setMovies] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (props.jwt === '') {\r\n      props.history.push({\r\n        pathname: '/login',\r\n      })\r\n      return\r\n    }\r\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          setError('Invalid response: ', response.status)\r\n        } else {\r\n          setError(null)\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((json) => {\r\n        setMovies(json.movies)\r\n      })\r\n  }, [props.jwt, props.history])\r\n\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <h2>Manage Catalogue</h2>\r\n        <div className='list-group'>\r\n          {movies.map((m) => (\r\n            <Link\r\n              key={m.id}\r\n              className='list-group-item list-group-item-action'\r\n              to={`/admin/movie/${m.id}`}\r\n            >\r\n              {m.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AdminFunc\r\n","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home'\nimport LoginFunc from './components/LoginFunc'\nimport GraphQL from './components/GraphQL'\nimport OneMovieGraphQL from './components/OneMovieGraphQL'\nimport MoviesFunc from './components/MoviesFunc'\nimport GenresFunc from './components/GenresFunc'\nimport OneMovieFunc from './components/OneMovieFunc'\nimport OneGenreFunc from './components/OneGenreFunc'\nimport EditMovieFunc from './components/EditMovieFunc'\nimport AdminFunc from './components/AdminFunc'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      jwt: '',\n    }\n    this.hyandleJWTChange(this.hyandleJWTChange.bind(this))\n  }\n\n  hyandleJWTChange = (jwt) => {\n    this.setState({ jwt: jwt })\n  }\n\n  componentDidMount() {\n    let t = window.localStorage.getItem('jwt')\n    if (t) {\n      if (this.state.jwt === '') {\n        this.setState({\n          jwt: JSON.parse(t),\n        })\n      }\n    }\n  }\n\n  logout = () => {\n    this.setState({ jwt: '' })\n    window.localStorage.removeItem('jwt')\n  }\n\n  render() {\n    let loginLink\n    if (this.state.jwt === '') {\n      loginLink = <Link to='/login'>Login</Link>\n    } else {\n      loginLink = (\n        <Link to='/logout' onClick={this.logout}>\n          Logout\n        </Link>\n      )\n    }\n    return (\n      <Router>\n        <div className='container'>\n          <div className='row'>\n            <div className='col mt-3'>\n              <h1 className='mt-3'>Go Watch a Movie!</h1>\n            </div>\n            <div className='col mt-3 text-end'>{loginLink}</div>\n            <hr className='mb-3'></hr>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-2'>\n              <nav>\n                <ul className='list-group'>\n                  <li className='list-group-item'>\n                    <Link to='/'>Home</Link>\n                  </li>\n                  <li className='list-group-item'>\n                    <Link to='/movies'>Movies</Link>\n                  </li>\n                  <li className='list-group-item'>\n                    <Link to='/genres'>Genres</Link>\n                  </li>\n                  {this.state.jwt !== '' && (\n                    <Fragment>\n                      <li className='list-group-item'>\n                        <Link to='/admin/movie/0'>Add movie</Link>\n                      </li>\n                      <li className='list-group-item'>\n                        <Link to='/admin'>Manage Catalogue</Link>\n                      </li>\n                    </Fragment>\n                  )}\n                  <li className='list-group-item'>\n                    <Link to='/graphql'>GraphQL</Link>\n                  </li>\n                </ul>\n                <pre>{JSON.stringify(this.state, null, 3)}</pre>\n              </nav>\n            </div>\n\n            <div className='col-md-10'>\n              <Switch>\n                <Route path='/movies/:id' component={OneMovieFunc} />\n                <Route path='/moviesgraphql/:id' component={OneMovieGraphQL} />\n                <Route path='/movies'>\n                  <MoviesFunc />\n                </Route>\n                <Route path='/genre/:id' component={OneGenreFunc} />\n                <Route\n                  exact\n                  path='/login'\n                  component={(props) => (\n                    <LoginFunc\n                      {...props}\n                      handleJWTChange={this.hyandleJWTChange}\n                    />\n                  )}\n                />\n                <Route exact path='/genres'>\n                  <GenresFunc />\n                </Route>\n                <Route exact path='/graphql'>\n                  <GraphQL />\n                </Route>\n                <Route\n                  path='/admin/movie/:id'\n                  component={(props) => (\n                    <EditMovieFunc {...props} jwt={this.state.jwt} />\n                  )}\n                />\n                <Route\n                  path='/admin'\n                  component={(props) => (\n                    <AdminFunc {...props} jwt={this.state.jwt} />\n                  )}\n                />\n                <Route path='/'>\n                  <Home />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport AppFunc from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppFunc />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}